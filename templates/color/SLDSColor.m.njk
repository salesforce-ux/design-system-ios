#import "SLDSColor.h"

@implementation SLDSColor

{% set lastValue = 'aaaa' %}

static float const sldsColors[][4] = { {% for categoryName, category in data %}{% for v in category %}
	{% raw %}{{% endraw %}{{v.value.r}},{{v.value.g}},{{v.value.b}},{{v.value.a}}{% raw %}}{% endraw %},{% endfor %}{% endfor %}
};

#define sldsColorTypeNames(enum) [@[\{% for categoryName, category in data %}{% for v in category %}{% set lastValue = v.name %}
	@"{{v.name}}",\{% endfor %}{% endfor %}
] objectAtIndex:enum]

{% for categoryName, category in data %}
+(UIColor *)slds{{categoryName}}:(SLDS{{categoryName}}Type)colorType{
  return [self colorForIndex:colorType];
}{% endfor %}

+(UIColor*)colorForIndex:(NSInteger)index {
    static NSMutableArray *colorCache = nil;
    if (colorCache == nil) {
        colorCache = [[NSMutableArray alloc] initWithCapacity:{{lastValue}}];
        for (NSInteger i = 0; i < {{lastValue}}; ++i)
            [colorCache addObject:[NSNull null]];
    }

    UIColor *color = [colorCache objectAtIndex:index];
    if( color && [color isEqual:[NSNull null]] ) {
        color = [UIColor colorWithRed:sldsColors[index][0]
                                green:sldsColors[index][1]
                                 blue:sldsColors[index][2]
                                alpha:sldsColors[index][3]];
        [colorCache setObject:color atIndexedSubscript:index];
    }

    return color;
}

@end