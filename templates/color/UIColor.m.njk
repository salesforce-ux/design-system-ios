// Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
// Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license

#import "UIColor+SLDSColor.h"

@implementation UIColor (SLDSColor)

static NSMutableDictionary *colorCache = nil;

{% set lastValue = 'empty' %}{% for categoryName, category in data %}{% for v in category %}{% set lastValue = v.name %}{% endfor %}{% endfor %}
{% for categoryName, category in data %}
+(instancetype)slds{{categoryName}}:(SLDS{{categoryName}}Type)colorType{
    if(colorType < SLDS{{categoryName}}TypeFirst || colorType > SLDS{{categoryName}}TypeLast) {
        // NOTE: Index out of bounds
        return nil;
    }

    @synchronized(colorCache) {
        return [self colorForIndex:colorType];
    }
}

//-------------------------------------------------------------------
{% endfor %}
+(UIColor*)colorForIndex:(NSInteger)index {

    if (colorCache == nil) {
        colorCache = [[NSMutableDictionary alloc] init];
    }

    UIColor *color = [colorCache objectForKey:[NSNumber numberWithInteger:index]];

    if( color == nil ) {
        color = [UIColor colorWithRed:sldsColors[index][0]
                                green:sldsColors[index][1]
                                 blue:sldsColors[index][2]
                                alpha:sldsColors[index][3]];

        [colorCache setObject:color forKey:[NSNumber numberWithInteger:index]];
    }

    return color;
}

@end